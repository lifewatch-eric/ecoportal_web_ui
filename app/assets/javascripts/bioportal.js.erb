// BioPortal jQuery Namespace
jQuery.bioportal = {}


// CSRF protection support
$(document).ajaxSend(function (e, xhr, options) {
  var token = $('meta[name=\'csrf-token\']').attr('content')
  xhr.setRequestHeader('X-CSRF-Token', token)
})



function BP_queryString () {
  var a = window.location.search.substr(1).split('&')
  var b = {}
  for (var i = 0; i < a.length; ++i) {
    var p = a[i].split('=')
    if (p.length != 2) continue
    b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, ' '))
  }
  return b
}

function bpPopWindow (e) {
  e.preventDefault()

  var url = jQuery(e.currentTarget).attr('href')
  var pop = (url.match(/\?/) != null) ? '&pop=true' : '?pop=true'
  var popWidth = 800
  var popHeight = 600

  if (typeof e.data !== 'undefined') {
    if (e.data.hasOwnProperty('w')) {
      popWidth = e.data.w
    }
    if (e.data.hasOwnProperty('h')) {
      popHeight = e.data.h
    }
  }

  // Make sure to insert the query string before the hash
  url = (url.match(/#/) != null) ? [url.slice(0, url.indexOf('#')), pop, url.slice(url.indexOf('#'))].join('') : url + pop

  // Fixes dual-screen position                         Most browsers       Firefox
  var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : window.screenX
  var dualScreenTop = window.screenTop != undefined ? window.screenTop : window.screenY

  var width = window.innerWidth ? window.innerWidth : (document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width)
  var height = window.innerHeight ? window.innerHeight : (document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height)

  var left = ((width / 2) - (popWidth / 2)) + dualScreenLeft
  var top = ((height / 2) - (popHeight / 2)) + dualScreenTop

  var newWindow = window.open(url, 'bp_popup_window', 'scrollbars=yes, width=' + popWidth + ', height=' + popHeight + ', top=' + top + ', left=' + left)
  if (window.focus) {
    newWindow.focus()
  }

}
jQuery('#submitFeedbackMenuItem').on('click', { w: '800', h: '600' }, bpPopWindow)

/**************************************************************
 * Standardized BP modal popups
 **************************************************************/

// Methods for working with standardized BP popups
var bp_popup_init = function (e) {
  bp_popup_cleanup()
  e.preventDefault()
  e.stopPropagation()

  var popup = jQuery(e.currentTarget).parents('.popup_container')
  var popup_list = popup.children('.bp_popup_list')

  popup.children('.bp_popup_link_container').addClass('bp_popup_shadow')
  popup.find('a.bp_popup_link').css('z-index', '5000').addClass('bp_popup_link_active')

  popup.children('.bp_popup_list').show()

  // Check for dropping off edge of screen
  if (popup_list.width() + popup_list.offset().left > jQuery(window).width()) {
    popup_list.css('left', '-250px')
  }

}

var bp_popup_cleanup = function () {
  jQuery('.bp_popup_link_container').removeClass('bp_popup_shadow')
  jQuery('.bp_popup_link').css('z-index', '').removeClass('bp_popup_link_active')
  jQuery('.bp_popup_list').hide()
}




jQuery(window).ready(function () {
  // Helper text for advanced search filter
  jQuery('input[type=text].help_text, textarea.help_text').each(function () {
    if (jQuery(this).val() == '') {
      jQuery(this).val(jQuery(this).attr('title'))
      jQuery(this).addClass('help_text_font')
    } else {
      jQuery(this).removeClass('help_text_font')
    }
  })

  jQuery('input[type=text].help_text, textarea.help_text').live('focus', (function () {
    var input = jQuery(this)
    if (input.attr('title') == input.val()) {
      input.val('')
      input.removeClass('help_text_font')
    }
  }))

  jQuery('input[type=text].help_text, textarea.help_text').live('blur', (function () {
    var input = jQuery(this)
    if (input.val() == '') {
      input.val(input.attr('title'))
      input.addClass('help_text_font')
    }
  }))
})



// Initialize all link buttons using jQuery UI button widget
jQuery(document).ready(function () {
  jQuery('a.link_button, input.link_button').button()
  // Properly define Chosen select width
  jQuery('.chzn-container').css('width', 'auto')
  jQuery('.chzn-container').css('min-width', '30em')
  jQuery('input.default').css('width', '100%')
  jQuery('.chzn-drop').css({ 'width': '100%' })
})

// Truncate more/less show and hide
jQuery(document).ready(function () {
  jQuery('a.truncated_more').live('click', function () {
    var link = jQuery(this)
    link.parents('span.more_less_container').find('.truncated_more').hide()
    link.parents('span.more_less_container').find('.truncated_less').show()
  })
  jQuery('a.truncated_less').live('click', function () {
    var link = jQuery(this)
    link.parents('span.more_less_container').find('.truncated_less').hide()
    link.parents('span.more_less_container').find('.truncated_more').show()
  })
})



// Enable this to see errors in jQuery(document).ready() code
// var oldReady = jQuery.ready;
// jQuery.ready = function(){
//   try{
//     return oldReady.apply(this, arguments);
//   }catch(e){
//     console.log("ERROR *************************************")
//     console.log(e)
//   }
// };

// Automatically get ajax content
jQuery(document).ready(function () {
  // We do this with a delay to avoid queuing ahead of other async requests
  setTimeout(getAjaxContent, 1000)
})

function getAjaxContent () {
  // Look for anchors with a get_via_ajax class and replace the parent with the resulting ajax call
  $('.get_via_ajax').each(function () {
    let elem = $(this)
    let parent = elem.parent()
    $.get(elem.attr('href'), (conceptLabel) => {
      parent.html(conceptLabel)
    })
  })
  setTimeout(getAjaxContent, 500)
}

// Handle will_paginate using ajax
jQuery('.pagination a').live('click', function (e) {
  var link = jQuery(this)
  var replaceDiv = link.closest('.paginate_ajax')
  e.preventDefault()
  if (replaceDiv.length > 0) {
    replaceDiv.load(link.attr('href'))
  } else {
    link.closest('div.pagination').parent().load(link.attr('href'))
  }
})



var currentPathArray = function () {
  var path, cleanPath = []
  path = window.location.pathname.split('/')
  for (var i = 0; i < path.length; i++) {
    if (path[i].length > 0)
      cleanPath.push(path[i])
  }
  return cleanPath
}










